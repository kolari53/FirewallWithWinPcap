<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>